// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScannerFinalPDF.Model.Data;

namespace ScannerFinalPDF.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.Maket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Colotp")
                        .HasColumnType("int");

                    b.Property<int>("Colstr")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Fill")
                        .HasColumnType("int");

                    b.Property<double>("Kvadr")
                        .HasColumnType("float");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("ZayvkaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZayvkaId");

                    b.ToTable("Maket");
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.RS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RS");
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.Sroki", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Coldn")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sroki");
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_create")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_rozh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PositionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.Zayvka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDostav")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePlanov")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePriem")
                        .HasColumnType("datetime2");

                    b.Property<int>("NShop")
                        .HasColumnType("int");

                    b.Property<string>("NameRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberTruck")
                        .HasColumnType("int");

                    b.Property<int>("RsId")
                        .HasColumnType("int");

                    b.Property<int>("SotrId")
                        .HasColumnType("int");

                    b.Property<int>("SrokiId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RsId");

                    b.HasIndex("SotrId");

                    b.HasIndex("SrokiId");

                    b.ToTable("Zayvka");
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.Maket", b =>
                {
                    b.HasOne("ScannerFinalPDF.Model.Data.Zayvka", "Zayvka")
                        .WithMany("Makets")
                        .HasForeignKey("ZayvkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.User", b =>
                {
                    b.HasOne("ScannerFinalPDF.Model.Data.Position", "Position")
                        .WithMany("Users")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScannerFinalPDF.Model.Data.Zayvka", b =>
                {
                    b.HasOne("ScannerFinalPDF.Model.Data.RS", "Rs")
                        .WithMany()
                        .HasForeignKey("RsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScannerFinalPDF.Model.Data.User", "Sotr")
                        .WithMany()
                        .HasForeignKey("SotrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScannerFinalPDF.Model.Data.Sroki", "Sroki")
                        .WithMany()
                        .HasForeignKey("SrokiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
